name: Tests

on:
  push:
    branches: main
  pull_request:
    types: [opened, synchronize]

jobs:
  unit:
    strategy:
      matrix:
        config:
          - {
              name: "Windows x64 (msvc)",
              os: windows-latest,
              compiler: "cl.exe",
              extension: ".exe",
              prefix: "Debug/"
           }
          - {
              name: "Linux x64 (gcc)",
              os: ubuntu-20.04,
              compiler: "/usr/bin/g++",
              extension: "",
              prefix: ""
           }
          - {
              name: "Linux x64 (clang)",
              os: ubuntu-20.04,
              compiler: "/usr/bin/clang++",
              extension: "",
              prefix: ""
           }
    runs-on: ${{ matrix.config.os }}

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 0

      - uses: ilammy/msvc-dev-cmd@d39d8f7626e5667b00caa504eaefd7c24c9ba49d

      - name: Enable vcpkg cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache
            ./vcpkg_installed
          key: ${{ runner.os }}-cachemere

      - name: Install apt dependencies
        if: matrix.config.os == 'ubuntu-20.04'
        run: |
          sudo apt-get update && sudo apt-get install -y clang build-essential libssl-dev curl

      - name: Patch vcpkg
        if: matrix.config.os == 'windows-latest'
        run: |
          Invoke-Webrequest -Uri "https://github.com/frivard-coveo/vcpkg-tool/releases/download/2021-04-19-ad06323bbd2b6ca4fbe3e9fa67bf0a3762e3e15d/vcpkg.exe" -OutFile "vcpkg\vcpkg.exe"

      - name: Build Tests & Benchmarks
        env:
          CXX: ${{ matrix.config.compiler }}
          VCPKG_ROOT: ./vcpkg
        shell: bash
        run: |
          cmake -B build -S . -DUSE_VCPKG=ON -DBUILD_TESTS=ON -DBUILD_BENCHMARKS=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=1 -D CMAKE_BUILD_TYPE=Debug || true
          cmake --build build/ || true
          cat build/vcpkg-manifest-install.log

      - name: Run Tests
        shell: bash
        run: |
          ./build/tests/${{ matrix.config.prefix }}cachemere_tests${{ matrix.config.extension }}
